package com.doublylinkedlist;

public class RemoveAtPerticularPossition {
	static Node head;
	static Node tail;

	public static void main(String[] args) {
		addAtEnd(1);
		addAtEnd(2);
		addAtEnd(3);
		addAtEnd(4);
		System.out.println("After remove");
		removeAtPerticularPossition(1);
		Node j = null;
		for (j = head; j != null; j = j.next)
			System.out.println(j.data);
	}
	private static int removeAtPerticularPossition(int position){
		Node p1=new Node();
		Node p2 =new Node();
		int x;
		if(head==null || position<0) return -1;
		for(p1=head,x=1;p1!=null && x<=position;x++){
			p2 =p1;
			p1=p1.next;
		}
		if(p1==null) return -1;
		if(p1==head){
			head= head.next;
		}else{
			p2.next = p1.next;
		}
		return 1;
	}
	
	public static void addAtEnd(int data) {
		Node n = new Node();
		n.data = data;
		n.next = n.prev = null;

		if (head == null) {
			head = tail = n;
		} else {
			tail.next = n;
			tail.prev = tail;
			tail = n;
		}
	}



}
