package com.palindrome;

import java.util.Arrays;

public class Palindrome_SubString_DynamicProgramming {
	public static void main(String[] args) {
		char str[] = { 'a', 'a', 'c', 'a', 'a', 'c' };
		int len = str.length;
		// int startingPoint, endPoint;
		int sp = 0, ep = 0;
		char[][] store = new char[len][len];
		// 1 true
		// 0 false

		// Case-1 when Length is 1
		while (sp < len) {
			ep = 0;
			while (ep < len) {
				if (sp == ep) {
					store[sp][ep] = 'T';
				}else if(ep<sp && ep-sp<0){
				
					store[sp][ep] = 'F';
				}
				ep++;
			}

			sp++;

		}

		for (int k = 0; k < store.length; k++)
			System.out.println(Arrays.toString(store[k]));

	}
}
